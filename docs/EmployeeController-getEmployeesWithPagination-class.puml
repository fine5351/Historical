@startuml
class EmployeeController {
  +getEmployeesWithPagination(pageNumber: int, pageSize: int): BaseResponse<Page<Employee>>
}
interface EmployeeMapper {
  +paginate(pageNumber: int, pageSize: int, query: QueryWrapper): Page<Employee>
}
class Employee {
  +id: Long
  +name: String
  ' other fields
}
class Page<T> {
  +records: List<T>
  +pageNumber: int
  +pageSize: int
  +totalRow: long
  +totalPage: long
}
class BaseResponse<T> {
  +code: String
  +message: String
  +data: T
}
class QueryWrapper {
  ' Represents query criteria
}

EmployeeController ..> EmployeeMapper : uses
EmployeeController ..> BaseResponse : uses in response
EmployeeMapper ..> Page : returns
EmployeeMapper ..> Employee : uses in Page
EmployeeMapper ..> QueryWrapper : uses as parameter
BaseResponse o-- Page : (T is Page<Employee>)
Page o-- Employee
@enduml
