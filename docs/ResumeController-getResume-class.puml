@startuml
package com.finekuo.springdatajpa.controller {
  class ResumeController {
    -resumeRepository: ResumeRepository
    +getResume(): BaseResponse<GetResumePayload>
  }
}

package com.finekuo.springdatajpa.repository {
  interface ResumeRepository {
    +findAll(): Iterable<Resume>
  }
}

package com.finekuo.springdatajpa.entity {
  class Resume {
    ' fields of Resume entity
  }
}

package com.finekuo.springdatajpa.dto {
  class ResumeDTO {
    +static fromEntity(resume: Resume): ResumeDTO
    ' fields of ResumeDTO
  }
}

package com.finekuo.springdatajpa.dto.response {
  class GetResumePayload {
    +resumes: List<ResumeDTO>
    ' constructor GetResumePayload(list: List<ResumeDTO>)
  }
}

package com.finekuo.normalcore.dto.response {
  class BaseResponse<T> {
    +static success(data: T): BaseResponse<T>
  }
}

com.finekuo.springdatajpa.controller.ResumeController ..> com.finekuo.springdatajpa.repository.ResumeRepository : uses
com.finekuo.springdatajpa.controller.ResumeController ..> com.finekuo.springdatajpa.dto.ResumeDTO : uses
com.finekuo.springdatajpa.controller.ResumeController ..> com.finekuo.springdatajpa.dto.response.GetResumePayload : creates & uses
com.finekuo.springdatajpa.controller.ResumeController ..> com.finekuo.normalcore.dto.response.BaseResponse : uses
com.finekuo.springdatajpa.repository.ResumeRepository ..> com.finekuo.springdatajpa.entity.Resume : returns Iterable
com.finekuo.springdatajpa.dto.ResumeDTO ..> com.finekuo.springdatajpa.entity.Resume : uses in fromEntity
com.finekuo.springdatajpa.dto.response.GetResumePayload o-- com.finekuo.springdatajpa.dto.ResumeDTO : contains List
com.finekuo.normalcore.dto.response.BaseResponse o-- com.finekuo.springdatajpa.dto.response.GetResumePayload : (T is GetResumePayload)
@enduml
