spring:
  datasource:
    url: jdbc:h2:mem:testdb-kafka;DB_CLOSE_DELAY=-1;MODE=MYSQL
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false
  transaction:
    default-timeout: 30
    rollback-on-commit-failure: true

  kafka:
    test:
      embedded:
        enabled: true
        brokers: 1
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    consumer:
      group-id: demo-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        interceptor.classes: com.finekuo.kafka.interceptor.KafkaConsumerLoggingInterceptor
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        interceptor.classes: com.finekuo.kafka.interceptor.KafkaProducerLoggingInterceptor
    properties:
      security.protocol: PLAINTEXT

server:
  port: 8084

logging:
  level:
    "org.springframework.kafka": warn
    "org.apache.kafka": warn
    "org.apache.zookeeper": warn
    "kafka": warn
    "state.change.logger": warn

